/*!
 * ExtSinglePageOpener
 * Part of the ExtHelpers project
 * @version  v1.5.0
 * @author   Gerrproger
 * @license  MIT License
 * Repo:     http://github.com/gerrproger/ext-helpers
 * Issues:   http://github.com/gerrproger/ext-helpers/issues
 */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t(e,document):"function"==typeof define&&define.amd?define(null,function(){t(e,document)}):e.ExtSinglePageOpener=t(e,document)}("undefined"!=typeof window?window:this,function(e,t){"use strict";class r{constructor(){this.isBackgroundScript=!(!chrome.extension.getBackgroundPage||chrome.extension.getBackgroundPage()!==e),this.manifest=chrome.runtime.getManifest(),this.pages=new Map,this.isBackgroundScript&&this._prepareBackground()}_prepareBackground(){chrome.runtime.onMessage.addListener((e,t,r)=>{if(e.extSinglePageOpener)return this.open(e.extSinglePageOpener,r),!0})}_openBackground(e,t){const r=this._getUrl(e),n=this._splitUrl(r),o=this.pages.get(n[0]),i={active:!0};o?chrome.tabs.get(o,o=>{!chrome.runtime.lastError&&o?(n.length>1&&(i.url=r),chrome.windows.update(o.windowId,{focused:!0}),chrome.tabs.update(o.id,i,t)):this._openNewTab(e,t)}):this._openNewTab(e,t)}_openContent(e,t){chrome.runtime.sendMessage({extSinglePageOpener:e},e=>{if(chrome.runtime.lastError||!e)throw new Error("ExtSinglePageOpener should also be initilized in the background page script!");t(e)})}_openNewTab(e,t){const r=this._getUrl(e),n=e=>{this.pages.set(this._splitUrl(r)[0],e.id),t(e)};e.type?chrome.windows.create({...e,focused:!0,url:r},e=>{n(e.tabs[0])}):chrome.windows.getCurrent({},e=>{if(e)return chrome.windows.update(e.id,{focused:!0}),void chrome.tabs.create({url:r},n);chrome.windows.create({focused:!0,url:r},e=>{n(e.tabs[0])})})}_getUrl(e){const t=e.url||e,r=t.match(/^@@dir(.*)/);return r?chrome.extension.getURL(r[1]):t}_splitUrl(e){return e.split(/\?|#/)}open(e,t=(()=>{})){if("function"!=typeof t)throw new Error("Callback should be a function!");if(!e||"string"!=typeof e&&("object"!=typeof e||"string"!=typeof e.url))throw new Error("URL or settings object with URL string is not provided!");this.isBackgroundScript?this._openBackground(e,t):this._openContent(e,t)}}return r});