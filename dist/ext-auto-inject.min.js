/*!
 * ExtAutoInject
 * Part of the ExtHelpers project
 * @version  v1.3.0
 * @author   Gerrproger
 * @license  MIT License
 * Repo:     http://github.com/gerrproger/ext-helpers
 * Issues:   http://github.com/gerrproger/ext-helpers/issues
 */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t(e,document):"function"==typeof define&&define.amd?define(null,function(){t(e,document)}):e.ExtAutoInject=t(e,document)}("undefined"!=typeof window?window:this,function(e,t){"use strict";class r{constructor(t,r){if(this.isBackgroundScript=!(!chrome.extension.getBackgroundPage||chrome.extension.getBackgroundPage()!==e),this.manifest=chrome.runtime.getManifest(),!this.isBackgroundScript&&(r=t),r&&"function"!=typeof r)throw new Error("Callback should be a function!");if(this.isBackgroundScript&&t&&"string"!=typeof t&&"object"!=typeof t)throw new Error("Ignore parameter should be a sting (match pattern) or a regular expression or an array of strings/expressions!");return new Promise(o=>{const s=t=>{r&&r.call(e,t),o(t)};this.isBackgroundScript?this.background(t,s):this.content(s)})}background(e,t){const r=e=>new RegExp(`^${e.replace(/\?/g,".").replace(/\*\.?/g,".*").replace(/\//g,"/").replace(/\./g,".")}$`);let o=null,s="object"==typeof e||"string"==typeof e?Array.isArray(e)?e:[e]:[];s=s.map(e=>"string"==typeof e?r(e):e),chrome.runtime.onInstalled.addListener(n=>{o={version:this.manifest.version,previousVersion:n.previousVersion,reason:n.reason},t(o),!1!==e&&(()=>{this.manifest.content_scripts.forEach(e=>{const t=(e=>{const t={allFrames:e.all_frames,matchAboutBlank:e.match_about_blank,files:{}},r=r=>{t.files[r]=e[r].filter(e=>!s.some(t=>{if(e.match(t))return!0}))};return r("js"),r("css"),t})(e);chrome.tabs.query({url:e.matches},s=>{s&&s.forEach(s=>{let n=[];if(e.exclude_matches&&(n=n.concat(e.exclude_matches)),e.exclude_globs&&(n=n.concat(e.exclude_globs)),!n.some(e=>{if(e=r(e),s.url.match(e))return!0})){if(e.include_globs&&!e.include_globs.some(e=>{if(e=r(e),s.url.match(e))return!0}))return;((e,t)=>{const r=r=>{t.files[r].forEach(o=>{chrome.tabs["js"===r?"executeScript":"insertCSS"](e,{file:o,allFrames:t.allFrames,matchAboutBlank:t.matchAboutBlank})})};chrome.tabs.executeScript(e,{code:`window.extAutoInjectData = ${JSON.stringify(o)};`},()=>{if(chrome.runtime.lastError)switch(chrome.runtime.lastError.message){case"The extensions gallery cannot be scripted.":case"The tab was closed.":return;default:throw new Error(chrome.runtime.lastError.message)}r("js"),r("css")})})(s.id,t)}})})})})()})}content(t){const r=o=>{o.source===e&&o.data.extAutoInjected&&(e.removeEventListener("message",r),t())};e.postMessage({extAutoInjected:!0},"*"),setTimeout(()=>{e.addEventListener("message",r)})}}return r});