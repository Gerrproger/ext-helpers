/*!
 * ExtStorageManager
 * Part of the ExtHelpers project
 * @version  v1.0.0
 * @author   Gerrproger
 * @license  MIT License
 * Repo:     http://github.com/gerrproger/ext-helpers
 * Issues:   http://github.com/gerrproger/ext-helpers/issues
 */
!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e(t,document):"function"==typeof define&&define.amd?define(null,function(){e(t,document)}):t.ExtStorageManager=e(t,document)}("undefined"!=typeof window?window:this,function(t,e){"use strict";return function(t,e,i){class s{constructor(t,e,i){this.name=t,this.after=i,this.onUpdateCalls=[],this.data={},this.defData=e,this.skip=!1,this.api={get:this.get.bind(this),set:this.set.bind(this),remove:this.remove.bind(this),onUpdate:this.onUpdate.bind(this),reset:this.reset.bind(this),clear:this.clear.bind(this)},chrome.storage[t].get(this._checkStorage.bind(this)),chrome.storage.onChanged.addListener(this._updateStorage.bind(this))}_checkStorage(t){const e=this._extend(t,this.defData);if(this.data=e.object,e.changed.length){const t={};e.changed.forEach(e=>{t[e]=this.data[e]}),chrome.storage[this.name].set(t)}this.after(this.get())}_isObject(t){return null!==t&&"object"==typeof t}_copyObject(t){return JSON.parse(JSON.stringify(t))}_extend(t,e){const i=[],s=(t,e,r)=>{Object.keys(e).forEach(a=>{void 0===t[a]?(t[a]=e[a],(t=>{!i.includes(t)&&i.push(t)})(r||a)):this._isObject(e[a])&&s(t[a],e[a],r||a)})};return t=this._copyObject(t||{}),e=this._copyObject(e||{}),s(t,e),{object:t,changed:i}}_updateStorage(t,e){if(e!==this.name||this.skip)return;const i=[],s=(t,e,r)=>{Object.keys(t).forEach(a=>{this._isObject(t[a])&&this._isObject(e[a])?s(t[a],e[a],`${r}.${a}`):t[a]!==e[a]&&i.push(`${r}.${a}`)})};Object.keys(t).forEach(e=>{if(!t[e].hasOwnProperty("newValue"))return delete this.data[e],void i.push(e);this._isObject(t[e].newValue)&&this._isObject(this.data[e])?s(t[e].newValue,this.data[e],e):t[e].newValue!==this.data[e]&&i.push(e),this.data[e]=t[e].newValue}),i.forEach(t=>{this.onUpdateCalls.forEach(e=>{new RegExp(`^${t.replace(/\./g,"\\.")}`).test(e[0])&&e[1](this.get(e[0]))})})}_replaceStorage(t){t=this._copyObject(t);const e=Object.keys(this.data).filter(e=>!t.hasOwnProperty(e));this.data=t,this.skip=!0,e.length&&chrome.storage[this.name].remove(e),chrome.storage[this.name].set(this.data,()=>this.skip=!1)}get(t){if(!t)return this._copyObject(this.data);let e=this.data;return t.split(/\./g).some(t=>{if(!e||!e[t])return!0;e=e[t]})?void 0:this._isObject(e)?this._copyObject(e):e}set(t,e){if(t&&"string"!=typeof t)throw new Error("Path shold be a string!");if(this._isObject(e)&&(e=this._copyObject(e)),!t){if(!this._isObject(e))throw new Error("Could not store a non-object in the storage!");return this._replaceStorage(e),this.api}let i=this.data;const s=t.split(/\./g),r=s.length-1;if(s.some((t,s)=>{if(s===r)i[t]=e;else if(void 0===i[t])i=i[t]={};else{if(!this._isObject(i[t]))return!0;i=i[t]}}))throw new Error("Could not store value in a non-object!");return chrome.storage[this.name].set({[s[0]]:this.data[s[0]]}),this.api}remove(t){if(!t)throw new Error("Path is not provided!");const e=t.split(/\./g),i=e.length-1;if(!i){if(!this.data[e[0]])throw new Error("Provided path is invalid!");return delete this.data[e[0]],chrome.storage[this.name].remove(e[0]),this.api}let s=this.data;if(e.some((t,r)=>{if(r===i){if(!this._isObject(s[t]))return!0;delete s[t],chrome.storage[this.name].set({[e[0]]:this.data[e[0]]})}else{if(!this._isObject(s[t]))return!0;s=s[t]}}))throw new Error("Provided path is not an object!");return this.api}onUpdate(t,e){if(t=t||"",!e)throw new Error("Function is not provided!");return this.onUpdateCalls.push([t,e]),this.api}reset(){return this._replaceStorage(this.defData),this.api}clear(){return this._replaceStorage({}),this.api}}i=i||"sync",e=e||(()=>{});return new s(i,t=t||{},e).api}});