/*!
 * ExtStorageManager
 * Part of the ExtHelpers project
 * @version  v1.5.1
 * @author   Gerrproger
 * @license  MIT License
 * Repo:     http://github.com/gerrproger/ext-helpers
 * Issues:   http://github.com/gerrproger/ext-helpers/issues
 */
!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e(t,document):"function"==typeof define&&define.amd?define(null,function(){e(t,document)}):t.ExtStorageManager=e(t,document)}("undefined"!=typeof window?window:this,function(t,e){"use strict";return function(e,i,s){class a{constructor(t="sync",e={},i=(()=>{})){const s=function(){if(!this.initialized)throw new n("Storage is not initialized yet!");return arguments[0].apply(this,Array.prototype.slice.call(arguments,1))};this.name=t,this.callback=i,this.onUpdateCalls=[],this.data={},this.defData=e||{},this.skip=!1,this.initialized=!1,this.nativeStorage=chrome.storage[t],this.api={get:s.bind(this,this.get),set:s.bind(this,this.set),remove:s.bind(this,this.remove),reset:s.bind(this,this.reset),clear:s.bind(this,this.clear),onUpdate:this.onUpdate.bind(this),getBytesInUse:this.getBytesInUse.bind(this),limits:this.limits},this.nativeStorage.get(this._checkStorage.bind(this)),this.nativeStorage.onChanged.addListener(this._updateStorage.bind(this))}_checkStorage(e){const i=this._extend(e,this.defData);if(this.data=i.object,i.changed.length){const t={};i.changed.forEach(e=>{t[e]=this.data[e]}),this.nativeStorage.set(t)}this.initialized=!0,this.callback.call(t,this.get())}_isObject(t){return null!==t&&"object"==typeof t}_copyObject(t){return JSON.parse(JSON.stringify(t))}_extend(t,e){const i=[],s=(t,e,a)=>{Object.keys(e).forEach(n=>{void 0===t[n]?(t[n]=e[n],(t=>{!i.includes(t)&&i.push(t)})(a||n)):this._isObject(e[n])&&s(t[n],e[n],a||n)})};return t=this._copyObject(t||{}),e=this._copyObject(e||{}),s(t,e),{object:t,changed:i}}_updateStorage(e){if(this.skip)return;const i=[],s=(t,e,a)=>{Object.keys(t).forEach(n=>{this._isObject(t[n])&&this._isObject(e[n])?s(t[n],e[n],`${a}.${n}`):t[n]!==e[n]&&i.push(`${a}.${n}`)})};Object.keys(e).forEach(t=>{if(!e[t].hasOwnProperty("newValue"))return delete this.data[t],void i.push(t);this._isObject(e[t].newValue)&&this._isObject(this.data[t])?s(e[t].newValue,this.data[t],t):e[t].newValue!==this.data[t]&&i.push(t),this.data[t]=e[t].newValue}),i.forEach(e=>{this.onUpdateCalls.forEach(i=>{(new RegExp(`^${i[0].replace(/\./g,"\\.")}`).test(e)||new RegExp(`^${e.replace(/\./g,"\\.")}`).test(i[0]))&&i[1].call(t,this.get(i[0]))})})}_replaceStorage(t){t=this._copyObject(t);const e=Object.keys(this.data).filter(e=>!t.hasOwnProperty(e));this.data=t,this.skip=!0,e.length&&this.nativeStorage.remove(e),this.nativeStorage.set(this.data,()=>this.skip=!1)}get(t){if(!t)return this._copyObject(this.data);let e=this.data;return t.split(/\./g).some(t=>{if(!e||void 0===e[t])return!0;e=e[t]})?void 0:this._isObject(e)?this._copyObject(e):e}set(t,e){if(t&&"string"!=typeof t)throw new n("Path should be a string!");if(this._isObject(e)&&(e=this._copyObject(e)),!t){if(!this._isObject(e))throw new n("Could not store a non-object in the storage root!");return this._replaceStorage(e),this.api}let i=this.data;const s=t.split(/\./g),a=s.length-1;if(s.some((t,s)=>{if(s===a)i[t]=e;else if(void 0===i[t])i=i[t]={};else{if(!this._isObject(i[t]))return!0;i=i[t]}}))throw new n("Passed path is not an object!");return this.nativeStorage.set({[s[0]]:this.data[s[0]]}),this.api}remove(t){if(!t)throw new n("Path is not passed!");const e=t.split(/\./g),i=e.length-1;if(!i){if(!this.data[e[0]])throw new n("Passed path is invalid!");return delete this.data[e[0]],this.nativeStorage.remove(e[0]),this.api}let s=this.data;if(e.some((t,a)=>{if(a===i){if(!this._isObject(s[t]))return!0;delete s[t],this.nativeStorage.set({[e[0]]:this.data[e[0]]})}else{if(!this._isObject(s[t]))return!0;s=s[t]}}))throw new n("Passed path is not an object!");return this.api}onUpdate(t,e){if("function"==typeof t)e=t,t=null;else if("function"!=typeof e)throw new n("Callback function is not passed!");return this.onUpdateCalls.push([t||"",e]),this.api}reset(){return this._replaceStorage(this.defData),this.api}clear(){return this._replaceStorage({}),this.api}getBytesInUse(e,i){if("function"==typeof e)i=e,e=null;else if("function"!=typeof i)throw new n("Callback function is not passed!");return this.nativeStorage.getBytesInUse(e||null,s=>{const a=this.nativeStorage[`QUOTA_BYTES${e?"_PER_ITEM":""}`];i.call(t,s,a)}),this.api}get limits(){return{maxItems:this.nativeStorage.MAX_ITEMS,maxSustainedWriteOperationsPerMinute:this.nativeStorage.MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE,maxWriteOperationsPerHour:this.nativeStorage.MAX_WRITE_OPERATIONS_PER_HOUR,maxWriteOperationsPerMinute:this.nativeStorage.MAX_WRITE_OPERATIONS_PER_MINUTE,quotaBytes:this.nativeStorage.QUOTA_BYTES,quotaBytesPerItem:this.nativeStorage.QUOTA_BYTES_PER_ITEM}}}class n extends Error{constructor(t){super(t),this.name="ExtStorageManagerError",this.stack=this.stack.replace(/\s\s\s\sat Storage.+(\n|$)/g,"")}}return new a(s,e,i).api}});