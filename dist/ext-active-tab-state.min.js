/*!
 * ExtActiveTabState
 * Part of the ExtHelpers project
 * @version  v1.3.1
 * @author   Gerrproger
 * @license  MIT License
 * Repo:     http://github.com/gerrproger/ext-helpers
 * Issues:   http://github.com/gerrproger/ext-helpers/issues
 */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t(e,document):"function"==typeof define&&define.amd?define(null,function(){t(e,document)}):e.ExtActiveTabState=t(e,document)}("undefined"!=typeof window?window:this,function(e,t){"use strict";class o{constructor(t,o){return this.isBackgroundScript=!(!chrome.extension.getBackgroundPage||chrome.extension.getBackgroundPage()!==e),(t||o)&&this.checkParams(t,o),this.checkParams.bind(this)}checkParams(e,t){if("function"!=typeof e&&this.isBackgroundScript)throw new Error("Callback should be a function!");if(t&&"string"!=typeof t&&(!this.isBackgroundScript||"boolean"!=typeof t))throw new Error(`Namespace should be a string${this.isBackgroundScript?" or a a boolean":""}!`);return this.isBackgroundScript?this.background(e,t):this.content(e,t),this.checkParams.bind(this)}background(t,o){let n=null,r=null;const a=()=>{chrome.tabs.query({active:!0,lastFocusedWindow:!0},a=>{const c=a[0];c&&(r=c.windowId,c.id!==n&&(n=c.id,o?s(c):t.call(e,c)))})},s=n=>{chrome.tabs.sendMessage(n.id,{extActiveTabState:{namespace:"string"==typeof o?o:void 0}},o=>{if(chrome.runtime.lastError)switch(t.call(e,n),chrome.runtime.lastError.message){case"Could not establish connection. Receiving end does not exist.":case"The message port closed before a response was received.":return;default:throw new Error(chrome.runtime.lastError.message)}t.call(e,n,o.extActiveTabState.response)})};a(),chrome.tabs.onActivated.addListener(a),chrome.windows.onFocusChanged.addListener(a),chrome.tabs.onUpdated.addListener((n,a,c)=>{"complete"===a.status&&c.windowId===r&&c.active&&(o?s(c):t.call(e,c))}),chrome.tabs.onCreated.addListener(e=>{e.active&&(n=e.id)})}content(t,o){chrome.runtime.onMessage.addListener((n,r,a)=>{if(!n.extActiveTabState||o&&o!==n.extActiveTabState.namespace)return;return a({extActiveTabState:{response:"function"==typeof t?t.call(e,n.extActiveTabState.namespace):t}}),!0})}}return o});